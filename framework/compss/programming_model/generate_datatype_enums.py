#!/usr/bin/python
#
#  Copyright 2002-2022 Barcelona Supercomputing Center (www.bsc.es)
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
java_path = './api/src/main/java/es/bsc/compss/types/annotations/parameter/DataType.java'
cpp_path = './bindings/bindings-common/src/data_type.h'
python_path = './bindings/python/src/pycompss/api/commons/data_type.py'

notification = 'Autogenerated file (see generate_datatype_enums.py). Used DataType.java as the source template.'

'''Get the defined types (and in the right order) 
'''
datatypes = []
already = False
for line in open(java_path, 'r'):
    if 'public enum' in line:
        already = True
        continue
    if already:
        already = not line.startswith('}')
    if already:
        cur_type = line.split()[0].replace(',', '').replace(';', '').strip()
        datatypes.append(cur_type)
        already = not line.startswith('}')

# C++
with open(cpp_path, 'w') as f:
    f.write('\n')
    f.write('// %s\n' % notification)
    f.write('enum datatype {\n    ')

    first = True
    for line in datatypes:
        line = line.lower().replace('_t', '_dt')
        if first:
            line += ' = 0'
        else:
            line = ',\n    ' + line
        f.write(line)
        first = False

    f.write('\n};\n')

# Python
with open(python_path, 'w') as f:
    f.write('# %s  # noqa\n\n\n' % notification)
    f.write('class SupportedDataTypes(object):\n')
    for (i, line) in enumerate(datatypes):
        f.write('    %s = %d\n' % (line.replace('_T', ''), i))
    f.write('\n\n')
    f.write('DataType = SupportedDataTypes()')
    f.write('\n')
